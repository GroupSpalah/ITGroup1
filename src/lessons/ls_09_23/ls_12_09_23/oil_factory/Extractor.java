package lessons.ls_09_23.ls_12_09_23.oil_factory;

/**
 * Добыча нефти
 * <p>
 * Компания, занимающаяся добычей нефти, хочет создать новую цифровую систему.
 * Первое требование касается управления фактическими экстракторами масла.
 * Все экстракторы имеют серийный номер,
 * предполагаемую производительность (сколько они способны извлечь за 24 часа) и количество
 * (сколько они фактически извлекли за 24 часа). Кроме того, некоторые экстракторы могут сообщать о
 * каких-либо сбоях за последние 24 часа.
 * <p>
 * Экстракторы бывают нескольких видов:
 * 1.)Стационарные наземные экстракторы устанавливаются в месте,
 * которое не может измениться после первоначальной настройки.
 * Они не могут сообщать об ошибках.
 * <p>
 * 2)Мобильные наземные экстракторы могут менять местоположение после его установки.
 * Они сообщают об ошибке, если ежедневный
 * объем извлечения составляет менее 25% от производительности.
 * <p>
 * 3)Морские платформы устанавливаются в море (у них нет местоположения) и имеют список основных рабочих.
 * У работника есть имя, должность (рабочий, медик или менеджер) и количество дней, которое он провел на платформе.
 * Все платформы сообщают об ошибке, если они извлекли менее 70% от запланированной мощности, у них нет медика
 * или кто-либо из рабочих находится на борту более 14 дней.
 * <p>
 * Бизнес интересует пара важных отчетов:
 * Каково количество экстракторов с активными неисправностями?
 * Какие экстракторы извлекли более 95% своей мощности за последние 24 часа?
 */
public class Extractor {
    private String serialNumber;
    private float intendedCapacity;
    private float actualCapacity;

    private Status status;

    public Extractor(String serialNumber, float intendedCapacity, float actualCapacity) {
        this.serialNumber = serialNumber;
        this.intendedCapacity = intendedCapacity;
        this.actualCapacity = actualCapacity;
    }

    public float getIntendedCapacity() {
        return intendedCapacity;
    }

    public float getActualCapacity() {
        return actualCapacity;
    }

    public Status getStatus() {
        return status;
    }

    public void setStatus(Status status) {
        this.status = status;
    }
}
